# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===== UrVote.Rocks Specific =====

# Environment variables and secrets
.env
.env.local
.env.production
.env.staging
.env.development
*.env

# Database files
*.db
*.sqlite
*.sqlite3
*.sql
*.dump
*.backup
*.bak

# Upload directory (contains user-submitted files)
uploads/
app/uploads/
/opt/urvote/uploads/

# Log files
*.log
logs/
app/logs/
/var/log/urvote/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Cache files
.cache/
cache/
__pycache__/
*.pyc
*.pyo
*.pyd

# Session files
*.session
*.sess

# SSL certificates
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
ssl/
certificates/

# Nginx configuration (if using)
nginx.conf
nginx.conf.backup

# Systemd service files
*.service
*.timer

# Docker volumes and data
docker-data/
postgres_data/
redis_data/

# Backup files
*.backup
*.bak
*.old
*.orig
*.save

# Test coverage
.coverage
htmlcov/
.tox/
.pytest_cache/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Application specific
# CSV logs from legacy upload system
submissions.csv
*.csv

# Alembic version files (keep the versions directory but ignore generated files)
alembic/versions/*.py
!alembic/versions/__init__.py

# Local development overrides
local_config.py
local_settings.py
config_local.py

# Production deployment files
deploy/
production/
staging/

# Monitoring and analytics
monitoring/
analytics/
stats/

# User data and personal information
user_data/
personal/
private/

# API keys and sensitive configuration
secrets/
keys/
tokens/

# Backup and archive files
*.tar
*.tar.gz
*.zip
*.rar
*.7z

# Performance profiling
*.prof
*.lprof
*.profile

# Memory dumps
*.dump
*.dmp

# Core dumps
core
core.*

# Temporary build artifacts
build/
dist/
*.egg-info/

# Node.js (if using frontend build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python virtual environments
venv/
env/
.venv/
.env/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath
*.sage.py

# Spyder
.spyderproject
.spyproject

# Rope
.ropeproject

# mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre
.pyre/

# pytype
.pytype/

# Cython
cython_debug/

# ===== Security Considerations =====

# Never commit these files:
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
.env
secrets/
keys/
tokens/
passwords.txt
credentials.json
service-account.json

# ===== Performance and Monitoring =====

# Profiling data
*.prof
*.lprof
*.profile

# Memory dumps
*.dump
*.dmp

# Core dumps
core
core.*

# Temporary files
*.tmp
*.temp
tmp/
temp/

# Cache directories
.cache/
cache/
__pycache__/

# ===== Development Tools =====

# Pre-commit hooks
.pre-commit-config.yaml

# Black formatting
.black

# Flake8
.flake8

# Mypy
.mypy.ini

# Pytest
pytest.ini
pyproject.toml

# Coverage
.coveragerc

# ===== Documentation =====

# Sphinx
docs/_build/
docs/build/

# MkDocs
site/

# Jupyter
.ipynb_checkpoints/

# ===== Testing =====

# Test results
test-results/
.pytest_cache/
.tox/
htmlcov/

# Coverage reports
.coverage
*.cover
coverage.xml

# ===== Deployment =====

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.yaml
*.yml
!docker-compose.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Ansible
*.retry

# ===== Backup and Recovery =====

# Database backups
*.sql
*.dump
*.backup
*.bak

# File backups
*.tar
*.tar.gz
*.zip
*.rar
*.7z

# Log backups
*.log.*
*.log.old

# ===== Monitoring and Logs =====

# Application logs
*.log
logs/
app/logs/

# System logs
/var/log/urvote/

# Access logs
access.log
error.log

# ===== User Generated Content =====

# Uploads
uploads/
app/uploads/
/opt/urvote/uploads/

# User data
user_data/
personal/
private/

# Temporary uploads
temp_uploads/
chunked_uploads/

# ===== API and External Services =====

# OAuth tokens
.oauth_tokens
.credentials

# API keys
api_keys.txt
service_keys.json

# External service configs
external_services/
third_party/

# ===== Performance and Optimization =====

# Compiled Python files
*.pyc
*.pyo
*.pyd

# Optimized files
*.opt-1.py
*.opt-2.py

# Bytecode
__pycache__/
*.py[cod]

# ===== Security and Privacy =====

# Personal information
personal_info/
user_profiles/
private_data/

# Authentication
auth_tokens/
session_data/
login_history/

# Encryption keys
encryption_keys/
private_keys/
public_keys/

# ===== Compliance and Legal =====

# GDPR data
gdpr_data/
user_consent/
data_requests/

# Legal documents
legal/
terms/
privacy/
contracts/

# ===== Quality Assurance =====

# Test data
test_data/
fixtures/
samples/

# Quality metrics
quality_metrics/
code_quality/
performance_metrics/

# ===== Integration and CI/CD =====

# CI/CD configuration
.github/
.gitlab-ci.yml
.travis.yml
.circleci/
azure-pipelines.yml

# Deployment scripts
deploy/
scripts/
automation/

# ===== Local Development =====

# Local overrides
local_*
*_local
local_config.py
local_settings.py

# Development tools
dev_tools/
development/
debug/

# ===== Production Considerations =====

# Production configs
production/
prod/
live/

# Staging environments
staging/
stage/
test/

# Backup locations
backup/
backups/
archive/

# ===== Monitoring and Alerting =====

# Monitoring configs
monitoring/
alerts/
dashboards/

# Metrics and analytics
metrics/
analytics/
statistics/

# Health checks
health/
status/
ping/

# ===== Error Handling =====

# Error logs
errors/
error_logs/
crash_dumps/

# Debug information
debug/
debug_info/
troubleshooting/

# ===== Performance Tuning =====

# Performance configs
performance/
tuning/
optimization/

# Benchmark results
benchmarks/
performance_tests/
load_tests/

# ===== Documentation and Help =====

# User guides
guides/
tutorials/
how_to/

# API documentation
api_docs/
swagger/
openapi/

# ===== Support and Maintenance =====

# Support tickets
support/
tickets/
issues/

# Maintenance logs
maintenance/
updates/
patches/

# ===== Final Notes =====

# Remember: When in doubt, err on the side of caution
# It's better to ignore a file than to accidentally commit sensitive information

# Always review what you're committing
# Use `git status` and `git diff` before committing

# Consider using pre-commit hooks to catch sensitive files
# https://pre-commit.com/

# For production deployments, consider using git-crypt or similar tools
# to handle sensitive configuration files
